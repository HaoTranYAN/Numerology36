{"version":3,"sources":["file:///Users/haothanhit/Desktop/ThanSoHocV2/Numerology36/assets/common/AudioManager.ts"],"names":["AudioManager","assert","assetManager","AudioClip","log","sys","SOUND","MUSIC","init","audioSource","_audioSource","playMusic","play","isMusicOn","playing","checkPlayMusic","getMusic","pauseMusic","pause","playSoundClick","getSound","playSound","setMusic","state","localStorage","setItem","sound","getItem","setSound","name","path","cachedAudioClip","_cachedAudioClipMap","playOneShot","resources","load","err","clip","console","warn","_audioSource2"],"mappings":";;;6GAKaA,Y;;;;;;;;;AALJC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,Y,OAAAA,Y;AAAcC,MAAAA,S,OAAAA,S;AAAwBC,MAAAA,G,OAAAA,G;AAAKC,MAAAA,G,OAAAA,G;;;;;;;;;AAEtDC,MAAAA,K,GAAQ,O;AACRC,MAAAA,K,GAAQ,O;;8BAEDP,Y,GAAN,MAAMA,YAAN,CAAmB;AAKxB;AACkB,eAAJQ,IAAI,CAACC,WAAD,EAA2B;AAC3CL,UAAAA,GAAG,CAAC,qBAAD,CAAH;AACAJ,UAAAA,YAAY,CAACU,YAAb,GAA4BD,WAA5B;AACD;;AAEsB,eAATE,SAAS,GAAG;AACxB,gBAAMF,WAAW,GAAGT,YAAY,CAACU,YAAjC;AACAT,UAAAA,MAAM,CAACQ,WAAD,EAAc,0BAAd,CAAN;AAEAA,UAAAA,WAAW,CAACG,IAAZ;AACD;;AAEsB,eAATC,SAAS,GAAY;AACjC,iBAAOb,YAAY,CAACU,YAAb,CAA0BI,OAAjC;AACD;;AAE2B,eAAdC,cAAc,GAAG;AAC7B,cAAI,KAAKC,QAAL,OAAoB,MAApB,IAA8B,CAAC,KAAKH,SAAL,EAAnC,EAAqD;AACnD,iBAAKF,SAAL;AACD;AACF;;AAEuB,eAAVM,UAAU,GAAG;AACzB,gBAAMR,WAAW,GAAGT,YAAY,CAACU,YAAjC;AACAT,UAAAA,MAAM,CAACQ,WAAD,EAAc,0BAAd,CAAN;AAEAA,UAAAA,WAAW,CAACS,KAAZ;AACD;;AAE2B,eAAdC,cAAc,GAAG;AAC7B,cAAI,KAAKC,QAAL,OAAoB,MAAxB,EAAgC;AAC9B,iBAAKC,SAAL,CAAe,OAAf;AACD;AACF;;AAEqB,eAARC,QAAQ,CAACC,KAAD,EAAgB;AACpClB,UAAAA,GAAG,CAACmB,YAAJ,CAAiBC,OAAjB,CAAyBlB,KAAzB,EAAgCgB,KAAhC;AACD;;AAEqB,eAARP,QAAQ,GAAW;AAC/B,cAAIU,KAAU,GAAGrB,GAAG,CAACmB,YAAJ,CAAiBG,OAAjB,CAAyBpB,KAAzB,CAAjB;AACA,iBAAOmB,KAAP,WAAOA,KAAP,GAAgB,MAAhB;AACD;;AAEqB,eAARE,QAAQ,CAACL,KAAD,EAAgB;AACpClB,UAAAA,GAAG,CAACmB,YAAJ,CAAiBC,OAAjB,CAAyBnB,KAAzB,EAAgCiB,KAAhC;AACD;;AAEqB,eAARH,QAAQ,GAAW;AAC/B,cAAIM,KAAU,GAAGrB,GAAG,CAACmB,YAAJ,CAAiBG,OAAjB,CAAyBrB,KAAzB,CAAjB;AACA,iBAAOoB,KAAP,WAAOA,KAAP,GAAgB,MAAhB;AACD;;AAEsB,eAATL,SAAS,CAACQ,IAAD,EAAe;AACpC,gBAAMpB,WAAW,GAAGT,YAAY,CAACU,YAAjC;AACAT,UAAAA,MAAM,CAACQ,WAAD,EAAc,0BAAd,CAAN;AAEA,gBAAMqB,IAAI,GAAI,SAAQD,IAAK,EAA3B;AACA,cAAIE,eAAe,GAAG/B,YAAY,CAACgC,mBAAb,CAAiCF,IAAjC,CAAtB;;AACA,cAAIC,eAAJ,EAAqB;AACnBtB,YAAAA,WAAW,CAACwB,WAAZ,CAAwBF,eAAxB,EAAyC,CAAzC;AACD,WAFD,MAEO;AAAA;;AACL,qCAAA7B,YAAY,CAACgC,SAAb,2CAAwBC,IAAxB,CAA6BL,IAA7B,EAAmC3B,SAAnC,EAA8C,CAACiC,GAAD,EAAMC,IAAN,KAAe;AAC3D,kBAAID,GAAJ,EAAS;AACPE,gBAAAA,OAAO,CAACC,IAAR,CAAaH,GAAb;AACA;AACD;;AAEDpC,cAAAA,YAAY,CAACgC,mBAAb,CAAiCF,IAAjC,IAAyCO,IAAzC;AACA5B,cAAAA,WAAW,CAACwB,WAAZ,CAAwBI,IAAxB,EAA8B,CAA9B;AACD,aARD;AASD;AACF;;AA9EuB,O;;AAAbrC,MAAAA,Y,CACIU,Y;AADJV,MAAAA,Y,CAEIgC,mB,GAAiD,E;AAFrDhC,MAAAA,Y,CAGIwC,a","sourcesContent":["import { assert, assetManager, AudioClip, AudioSource, log, sys } from \"cc\";\n\nconst SOUND = \"SOUND\";\nconst MUSIC = \"MUSIC\";\n\nexport class AudioManager {\n  private static _audioSource?: AudioSource;\n  private static _cachedAudioClipMap: Record<string, AudioClip> = {};\n  private static _audioSource2?: AudioSource;\n\n  // init AudioManager in GameRoot component.\n  public static init(audioSource: AudioSource) {\n    log(\"Init AudioManager !\");\n    AudioManager._audioSource = audioSource;\n  }\n\n  public static playMusic() {\n    const audioSource = AudioManager._audioSource!;\n    assert(audioSource, \"AudioManager not inited!\");\n\n    audioSource.play();\n  }\n\n  public static isMusicOn(): boolean {\n    return AudioManager._audioSource.playing;\n  }\n\n  public static checkPlayMusic() {\n    if (this.getMusic() === \"true\" && !this.isMusicOn()) {\n      this.playMusic();\n    }\n  }\n\n  public static pauseMusic() {\n    const audioSource = AudioManager._audioSource!;\n    assert(audioSource, \"AudioManager not inited!\");\n\n    audioSource.pause();\n  }\n\n  public static playSoundClick() {\n    if (this.getSound() === \"true\") {\n      this.playSound(\"click\");\n    }\n  }\n\n  public static setMusic(state: string) {\n    sys.localStorage.setItem(MUSIC, state);\n  }\n\n  public static getMusic(): string {\n    var sound: any = sys.localStorage.getItem(MUSIC);\n    return sound ?? \"true\";\n  }\n\n  public static setSound(state: string) {\n    sys.localStorage.setItem(SOUND, state);\n  }\n\n  public static getSound(): string {\n    var sound: any = sys.localStorage.getItem(SOUND);\n    return sound ?? \"true\";\n  }\n\n  public static playSound(name: string) {\n    const audioSource = AudioManager._audioSource!;\n    assert(audioSource, \"AudioManager not inited!\");\n\n    const path = `sound/${name}`;\n    let cachedAudioClip = AudioManager._cachedAudioClipMap[path];\n    if (cachedAudioClip) {\n      audioSource.playOneShot(cachedAudioClip, 1);\n    } else {\n      assetManager.resources?.load(path, AudioClip, (err, clip) => {\n        if (err) {\n          console.warn(err);\n          return;\n        }\n\n        AudioManager._cachedAudioClipMap[path] = clip;\n        audioSource.playOneShot(clip, 1);\n      });\n    }\n  }\n}\n"]}