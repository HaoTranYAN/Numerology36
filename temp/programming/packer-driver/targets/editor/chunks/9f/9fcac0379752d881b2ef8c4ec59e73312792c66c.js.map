{"version":3,"sources":["file:///Users/haothanhit/Desktop/ThanSoHocV2/Numerology36/assets/common/AudioManager.ts"],"names":["AudioManager","assert","assetManager","AudioClip","log","init","audioSource","_audioSource","playMusic","play","isMusicOn","playing","pauseMusic","pause","playSound","name","path","cachedAudioClip","_cachedAudioClipMap","playOneShot","resources","load","err","clip","console","warn"],"mappings":";;;wGAEaA,Y;;;;;;;;;AAFJC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,Y,OAAAA,Y;AAAcC,MAAAA,S,OAAAA,S;AAAwBC,MAAAA,G,OAAAA,G;;;;;;;;;8BAE1CJ,Y,GAAN,MAAMA,YAAN,CAAmB;AAItB;AACkB,eAAJK,IAAI,CAAEC,WAAF,EAA4B;AAC1CF,UAAAA,GAAG,CAAC,qBAAD,CAAH;AACAJ,UAAAA,YAAY,CAACO,YAAb,GAA4BD,WAA5B;AACH;;AAEsB,eAATE,SAAS,GAAI;AACvB,gBAAMF,WAAW,GAAGN,YAAY,CAACO,YAAjC;AACAN,UAAAA,MAAM,CAACK,WAAD,EAAc,0BAAd,CAAN;AAEAA,UAAAA,WAAW,CAACG,IAAZ;AACH;;AAEsB,eAATC,SAAS,GAAU;AAE7B,iBAAOV,YAAY,CAACO,YAAb,CAA0BI,OAAjC;AACH;;AAEuB,eAAVC,UAAU,GAAE;AAEtB,gBAAMN,WAAW,GAAGN,YAAY,CAACO,YAAjC;AACAN,UAAAA,MAAM,CAACK,WAAD,EAAc,0BAAd,CAAN;AAEAA,UAAAA,WAAW,CAACO,KAAZ;AACH;;AAGsB,eAATC,SAAS,CAACC,IAAD,EAAe;AAClC,gBAAMT,WAAW,GAAGN,YAAY,CAACO,YAAjC;AACAN,UAAAA,MAAM,CAACK,WAAD,EAAc,0BAAd,CAAN;AAEA,gBAAMU,IAAI,GAAI,SAAQD,IAAK,EAA3B;AACA,cAAIE,eAAe,GAAGjB,YAAY,CAACkB,mBAAb,CAAiCF,IAAjC,CAAtB;;AACA,cAAIC,eAAJ,EAAqB;AACjBX,YAAAA,WAAW,CAACa,WAAZ,CAAwBF,eAAxB,EAAyC,CAAzC;AACH,WAFD,MAEO;AAAA;;AACH,qCAAAf,YAAY,CAACkB,SAAb,2CAAwBC,IAAxB,CAA6BL,IAA7B,EAAmCb,SAAnC,EAA8C,CAACmB,GAAD,EAAMC,IAAN,KAAe;AACzD,kBAAID,GAAJ,EAAS;AACLE,gBAAAA,OAAO,CAACC,IAAR,CAAaH,GAAb;AACA;AACH;;AAEDtB,cAAAA,YAAY,CAACkB,mBAAb,CAAiCF,IAAjC,IAAyCO,IAAzC;AACAjB,cAAAA,WAAW,CAACa,WAAZ,CAAwBI,IAAxB,EAA8B,CAA9B;AACH,aARD;AASH;AACJ;;AAlDqB,O;;AAAbvB,MAAAA,Y,CACMO,Y;AADNP,MAAAA,Y,CAEMkB,mB,GAAiD,E","sourcesContent":["import { assert, assetManager, AudioClip, AudioSource, log } from \"cc\";\n\nexport class AudioManager {\n    private static _audioSource?: AudioSource;\n    private static _cachedAudioClipMap: Record<string, AudioClip> = {};\n\n    // init AudioManager in GameRoot component.\n    public static init (audioSource: AudioSource) {\n        log('Init AudioManager !');\n        AudioManager._audioSource = audioSource;\n    }\n\n    public static playMusic () {\n        const audioSource = AudioManager._audioSource!;\n        assert(audioSource, 'AudioManager not inited!');\n\n        audioSource.play();\n    }\n\n    public static isMusicOn():boolean{\n\n        return AudioManager._audioSource.playing;\n    }\n\n    public static pauseMusic(){\n\n        const audioSource = AudioManager._audioSource!;\n        assert(audioSource, 'AudioManager not inited!');\n\n        audioSource.pause();\n    }\n\n\n    public static playSound(name: string) {\n        const audioSource = AudioManager._audioSource!;\n        assert(audioSource, 'AudioManager not inited!');\n\n        const path = `sound/${name}`;\n        let cachedAudioClip = AudioManager._cachedAudioClipMap[path];\n        if (cachedAudioClip) {\n            audioSource.playOneShot(cachedAudioClip, 1);\n        } else {\n            assetManager.resources?.load(path, AudioClip, (err, clip) => {\n                if (err) {\n                    console.warn(err);\n                    return;\n                }\n                \n                AudioManager._cachedAudioClipMap[path] = clip;\n                audioSource.playOneShot(clip, 1);\n            });\n        }\n    }\n}"]}