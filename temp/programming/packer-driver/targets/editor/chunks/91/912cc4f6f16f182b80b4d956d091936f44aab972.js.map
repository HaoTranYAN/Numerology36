{"version":3,"sources":["file:///Users/haothanhit/Desktop/ThanSoHocV2/Numerology36/assets/script/Profile.ts"],"names":["_decorator","Component","Node","EditBox","ToggleComponent","AudioManager","ccclass","property","Profile","onLoad","callback","event","customEventData","rdMale","isChecked","imgMale","active","imgFemale","validateInfo","playSoundClick","exitScreen","start","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAA8BC,MAAAA,I,OAAAA,I;AAAaC,MAAAA,O,OAAAA,O;AAA4EC,MAAAA,e,OAAAA,e;;AAKnIC,MAAAA,Y,iBAAAA,Y;;;;;;;;;OAJH;AAACC,QAAAA,OAAD;AAAUC,QAAAA;AAAV,O,GAAsBP,U;;yBAOPQ,O,WADpBF,OAAO,CAAC,SAAD,C,UAGHC,QAAQ,CAACH,eAAD,C,UAGRG,QAAQ,CAACH,eAAD,C,UAIRG,QAAQ,CAACL,IAAD,C,UAGRK,QAAQ,CAACL,IAAD,C,UAIRK,QAAQ,CAACJ,OAAD,C,UAGRI,QAAQ,CAACJ,OAAD,C,UAGRI,QAAQ,CAACJ,OAAD,C,UAGRI,QAAQ,CAACJ,OAAD,C,2BA1Bb,MACqBK,OADrB,SACqCP,SADrC,CAC+C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AA2B7CQ,QAAAA,MAAM,GAAG,CAER;;AAEDC,QAAAA,QAAQ,CAACC,KAAD,EAAeC,eAAf,EAAuC;AAC7C;AACA;AACE,cAAG,KAAKC,MAAL,CAAYC,SAAZ,KAAwB,IAA3B,EAAgC;AAC7B,iBAAKC,OAAL,CAAaC,MAAb,GAAoB,IAApB;AACA,iBAAKC,SAAL,CAAeD,MAAf,GAAsB,KAAtB;AAEF,WAJD,MAIK;AACH,iBAAKD,OAAL,CAAaC,MAAb,GAAoB,KAApB;AACA,iBAAKC,SAAL,CAAeD,MAAf,GAAsB,IAAtB;AAGD;AAGN;;AAGGE,QAAAA,YAAY,GAAE;AAClB;AAAA;AAAA,4CAAaC,cAAb;AAKK;;AAEFC,QAAAA,UAAU,GAAE;AAEX;AAAA;AAAA,4CAAaD,cAAb,GAFW,CAIb;AACA;AAGA;AACA;AACA;AAEA;AAEE;;AAEFE,QAAAA,KAAK,GAAG,CAIN;AACA;AAED;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAE3B;;AApF8C,O;;;;;iBAGjB,I;;;;;;;iBAGE,I;;;;;;;iBAIV,I;;;;;;;iBAGF,I;;;;;;;iBAIM,I;;;;;;;iBAGL,I;;;;;;;iBAGE,I;;;;;;;iBAGD,I","sourcesContent":["import { _decorator, Component,assert,AudioSource, Node, Label, EditBox,sys, director, Button,game, EventHandler, ToggleContainerComponent, ToggleComponent, Sprite } from 'cc';\nconst {ccclass, property} = _decorator;\n\n\n\nimport { AudioManager } from \"../common/AudioManager\";\n\n@ccclass('Profile')\nexport default class Profile extends Component {\n\n    @property(ToggleComponent)\n    rdMale: ToggleComponent = null;\n  \n    @property(ToggleComponent)\n    rdFemale: ToggleComponent = null;\n\n\n    @property(Node)\n    imgFemale:Node  = null;\n\n    @property(Node)\n    imgMale:Node  = null;\n\n\n    @property(EditBox)\n    edtFullName: EditBox= null;\n \n    @property(EditBox)\n    edtDay: EditBox= null;\n\n    @property(EditBox)\n    edtMonth: EditBox= null;\n\n    @property(EditBox)\n    edtYear: EditBox= null;\n  onLoad() {\n\n  }\n\n  callback(event: Event, customEventData: string){\n    // The event here is a Touch Event object, and you can get the send node of the event by event.target\n    // The customEventData parameter here is equal to the \"foobar\" you set before\n      if(this.rdMale.isChecked===true){\n         this.imgMale.active=true;\n         this.imgFemale.active=false;\n\n      }else{\n        this.imgMale.active=false;\n        this.imgFemale.active=true;\n\n\n      }\n   \n      \n}\n\n\n    validateInfo(){\nAudioManager.playSoundClick();\n\n\n      \n\n    }\n   \n   exitScreen(){\n\n    AudioManager.playSoundClick();\n\n  //   if(AudioManager.isMusicOn()){\n  //     AudioManager.pauseMusic()\n    \n      \n  // }else{\n  //   AudioManager.playMusic();\n  //   AudioManager.playSound(\"click\");      \n\n  // }\n\n   }\n  \n  start() {\n\n\n\n    // AudioManager.setStateMusic(\"1\");\n    //          AudioManager.checkPlayMusic();\n\n  }\n\n  update(deltaTime: number) {\n        \n}\n\n\n}\n\n"]}