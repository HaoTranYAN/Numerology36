{"version":3,"sources":["file:///Users/haothanhit/Desktop/ThanSoHocV2/Numerology36/assets/common/AudioManager.ts"],"names":["AudioManager","assert","assetManager","AudioClip","log","sys","SOUND","MUSIC","init","audioSource","_audioSource","playMusic","play","isMusicOn","playing","checkPlayMusic","getMusic","pauseMusic","pause","playSoundClick","getSound","playSound","setMusic","state","localStorage","setItem","sound","getItem","setSound","name","path","cachedAudioClip","_cachedAudioClipMap","playOneShot","resources","load","err","clip","console","warn"],"mappings":"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","sourcesContent":["import { assert, assetManager, AudioClip, AudioSource, log, sys } from \"cc\";\n\nconst SOUND = \"SOUND\";\nconst MUSIC = \"MUSIC\";\n\n\nexport class AudioManager {\n    private static _audioSource?: AudioSource;\n    private static _cachedAudioClipMap: Record<string, AudioClip> = {};\n\n    // init AudioManager in GameRoot component.\n    public static init (audioSource: AudioSource) {\n        log('Init AudioManager !');\n        AudioManager._audioSource = audioSource;\n    }\n\n    public static playMusic () {\n        const audioSource = AudioManager._audioSource!;\n        assert(audioSource, 'AudioManager not inited!');\n\n        audioSource.play();\n    }\n\n    public static isMusicOn():boolean{\n\n        return AudioManager._audioSource.playing;\n    }\n\n\n    public static checkPlayMusic(){\n\n        if(this.getMusic()===\"true\"){\n\n            this.playMusic();\n       }\n\n    }\n\n    public static pauseMusic(){\n\n        const audioSource = AudioManager._audioSource!;\n        assert(audioSource, 'AudioManager not inited!');\n\n        audioSource.pause();\n    }\n\n\n\n    public static playSoundClick(){\n\n        if(this.getSound()===\"true\"){\n             this.playSound(\"click\");      \n        }\n\n    }\n\n    public static setMusic(state:string){\n    \n\n        sys.localStorage.setItem(MUSIC,state);\n\n    }\n\n\n    public static getMusic():string{\n\n        var sound:any = sys.localStorage.getItem(MUSIC);\n        return sound?? \"true\";\n\n    }\n\n\n    public static setSound(state:string){\n\n        sys.localStorage.setItem(SOUND,state);\n\n    }\n\n\n    public static getSound():string{\n\n        var sound:any = sys.localStorage.getItem(SOUND);\n        return sound?? \"true\";\n\n    }\n    \n\n\n\n    public static playSound(name: string) {\n        const audioSource = AudioManager._audioSource!;\n        assert(audioSource, 'AudioManager not inited!');\n\n        const path = `sound/${name}`;\n        let cachedAudioClip = AudioManager._cachedAudioClipMap[path];\n        if (cachedAudioClip) {\n            audioSource.playOneShot(cachedAudioClip, 1);\n        } else {\n            assetManager.resources?.load(path, AudioClip, (err, clip) => {\n                if (err) {\n                    console.warn(err);\n                    return;\n                }\n                \n                AudioManager._cachedAudioClipMap[path] = clip;\n                audioSource.playOneShot(clip, 1);\n            });\n        }\n    }\n}"]}