{"version":3,"sources":["file:///Users/haothanhit/Desktop/ThanSoHocV2/Numerology36/assets/prefab/PrefabForecastMonth.ts"],"names":["_decorator","Component","Label","Sprite","RichText","SpriteFrame","color","sys","CommonTS","Constant","TypeActionForecast","Languages","ccclass","property","PrefabForecastMonth","monthForecast","onLoad","initLayout","start","update","deltaTime","clickPreOrNext","event","customEventData","PRE","lblMonth","lblNextMonth","updateRichTextData","NEXT","type","url","language","getLanguage","number","checkNextNumber","console","log","d","Date","dateNext","getFullYear","getMonth","getDate","dataUser","JSON","parse","localStorage","getItem","PERSONAL","personal","tinhPersonalDay","string","nextMonth","year","loadData"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Label, Sprite, RichText, SpriteFrame, color, sys, assetManager, TextAsset } from 'cc';\nimport { CommonTS } from '../common/CommonTS';\nimport { Constant, TypeActionForecast } from '../common/Constant';\nimport { Languages } from '../common/Language';\nconst { ccclass, property } = _decorator;\n\n@ccclass('PrefabForecastMonth')\n\nexport class PrefabForecastMonth extends Component {\n\n    @property(Label)\n    lblMonth: Label = null;\n\n    @property(Label)\n    lblNextMonth: Label = null;\n\n    @property(Sprite)\n    imgWeatherMonth: Sprite = null;\n\n    @property(RichText)\n    richTextMonth: RichText = null;\n\n\n    @property(SpriteFrame)\n    icSun: SpriteFrame | null = null;\n    @property(SpriteFrame)\n    icMoon: SpriteFrame | null = null;\n    monthForecast: number;\n\n   \n\n    onLoad(){\n    \n        this.initLayout()\n\n    }\n    start() {\n\n    }\n\n\n    update(deltaTime: number) {\n        \n    }\n\n    clickPreOrNext(event, customEventData){\n\n        if(customEventData==TypeActionForecast.PRE){\n            this.lblMonth.color = color(255, 255, 255);\n            this.lblNextMonth.color = color(5, 4, 44);\n            this.updateRichTextData(customEventData);\n\n        }else if(customEventData==TypeActionForecast.NEXT){\n\n            this.lblNextMonth.color = color(255, 255, 255);\n            this.lblMonth.color = color(5, 4, 44);\n            this.updateRichTextData(customEventData);\n        }\n        \n\n\n    }\n\n\n    updateRichTextData(type: TypeActionForecast){\n        var url = \"\";\n        var language = Languages.getLanguage();\n        var number = 0;\n        if (type == TypeActionForecast.PRE) {\n            number = this.monthForecast;\n          } else if(type == TypeActionForecast.NEXT) {\n            number = this.checkNextNumber(this.monthForecast + 1);\n          }\n          url = language + \"_monthpersonal_\" + number;\n          console.log(\"number: \" + number);\n\n    }\n    checkNextNumber(number) {\n        if (number > 9) {\n          number = 1;\n        }\n        return number;\n      }\n\n    initLayout(){\n\n\n        var d = new Date();\n        var dateNext = new Date(d.getFullYear(), d.getMonth(), d.getDate() + 1);\n        var dataUser = JSON.parse(sys.localStorage.getItem(Constant.PERSONAL));\n        ////console.log(dataUser);\n        var personal = CommonTS.tinhPersonalDay(dataUser, d);\n        var language = Languages.getLanguage();\n      \n\n\n        this.lblMonth.string = d.getMonth() + 1 + \"/\" + d.getFullYear();\n        var nextMonth = d.getMonth() + 2;\n        var year = d.getFullYear();\n        if (nextMonth > 12) {\n          nextMonth = 1;\n          year = year + 1;\n        }\n        this.lblNextMonth.string = nextMonth + \"/\" + year;\n        //url = language + \"/ThangCaNhan/\" + personal.monthForecast;\n        this.monthForecast = personal.monthForecast;\n        var url = language + \"_monthpersonal_\" + this.monthForecast;\n        this.loadData(url);\n\n\n        \n    }\n\n      /**\n   * Hàm load Data từ bundle\n   * @param numberDay: Tên con số cần lấy (Đánh số theo thứ tự từ 1-9)\n   * @param nameBundle : Tên bundle chứa\n   * @result : Nội dung về con số tương ứng \n   */\n  loadData(url) {\n    // var bundle = assetManager.getBundle(\"Data\");\n\n    // if (bundle == null) {\n    //   assetManager.loadBundle(\"Data\", (err, bundle) => {\n    //     bundle.load(url, TextAsset, function (err, texture) {\n    //       this.richTextMonth.string = texture.toString();\n    //     });\n    //   });\n    // } else {\n    //     bundle.load(url, TextAsset, function (err, texture) {\n    //       ////console.log(texture)\n    //       this.richTextMonth.string = texture.toString();\n    //     });\n    // }\n  }\n\n\n\n  \n}\n\n"]}